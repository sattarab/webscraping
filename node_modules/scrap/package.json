{
  "name": "scrap",
  "version": "0.1.0",
  "description": "A simple screen scraper module that uses jQuery style semantics.",
  "repository": {
    "type": "git",
    "url": "git@github.com:jprichardson/node-scrap.git"
  },
  "keywords": [
    "screen",
    "scraping",
    "scraper",
    "jquery",
    "harvesting",
    "screen scraping",
    "cheerio",
    "request",
    "http",
    "html"
  ],
  "author": {
    "name": "JP Richardson",
    "email": "jprichardson@gmail.com"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": ""
    }
  ],
  "dependencies": {
    "request": "*",
    "cheerio": "0.10.4"
  },
  "devDependencies": {
    "autoresolve": "0.0.3",
    "buffet": "~0.4.6"
  },
  "main": "./lib/scrap.js",
  "scripts": {
    "test": "mocha test"
  },
  "readme": "Node.js - scrap\n================\n\nA simple screen scraper module that uses jQuery style semantics.\n\n\nWhy?\n----\n\nIn every screen scraper program that I wrote, I had to include [request][request] and [cheerio][cheerio]. I would then have to check the response error object and the response code. It became a bit annoying. Hence this package.\n\n\n\nInstallation\n------------\n\n    npm install scrap\n\n\n\nQuick and Dirty\n---------------\n\n\n```javascript\nvar scrap = require('scrap');\n\nscrap('http://google.com', function(err, $) {\n  console.log($('title').text().trim()); //Google\n});\n```\n\n\nAPI\n-----------\n\n### scrap(options, callback)\n\n**options**: Can either be a string url or an object containing options as key,value pair. \n\nOptions include:\n- `url`: The url to parse.\n- `timeout`: The number of milliseconds to wait before aborting the request.\n- `proxy`: The proxy string e.g. _245.12.19.145:8080_.\n\n**callback**: The callback function for a response. The function can include the following parameters:\n- `err`: The error object if it exists. If the response code is not `200` this will be set. This may be a poor design choice, time will tell.\n- `$`: jQuery object to use on the page.\n- `code`: HTTP response status code.\n- `html`: HTML or response body text.\n- `resp`: The actual response object.\n\n\n\nCredits\n-------\n\nThis would not be possible without the great Node.js modules:\n\n* [Request][request]\n* [Cheerio][cheerio]\n\n\n\nAuthor\n------\n\nThis module was written by [JP Richardson][aboutjp]. You should follow him on Twitter [@jprichardson][twitter]. Also read his coding blog [Procbits][procbits]. If you write software with others, you should checkout [Gitpilot][gitpilot] to make collaboration with Git simple.\n\n\n\nLicense\n-------\n\n(MIT License)\n\nCopyright 2012, JP Richardson  <jprichardson@gmail.com>\n\n\n[request]: https://github.com/mikeal/request\n[cheerio]: https://github.com/MatthewMueller/cheerio\n\n[aboutjp]: http://about.me/jprichardson\n[twitter]: http://twitter.com/jprichardson\n[procbits]: http://procbits.com\n[gitpilot]: http://gitpilot.com\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jprichardson/node-scrap/issues"
  },
  "_id": "scrap@0.1.0",
  "dist": {
    "shasum": "1d1c360825e59d2059e97b102a9f5964ff89097f"
  },
  "_from": "scrap@*",
  "_resolved": "https://registry.npmjs.org/scrap/-/scrap-0.1.0.tgz"
}
